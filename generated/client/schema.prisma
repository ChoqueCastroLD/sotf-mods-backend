generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["deno"]
  output          = "../generated/client"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id       Int    @id @default(autoincrement())
  email    String @unique
  password String
  name     String
  slug     String @unique

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  mods Mod[]
}

model Mod {
  id          Int     @id @default(autoincrement())
  name        String
  slug        String  @unique
  description String
  isNSFW      Boolean
  isApproved  Boolean
  isFeatured  Boolean

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user        User?        @relation(fields: [userId], references: [id])
  userId      Int?
  category    Category?    @relation(fields: [categoryId], references: [id])
  categoryId  Int?
  modVersions ModVersion[]
  tags        Tag[]
  images      ModImage[]
}

model ModImage {
  id          Int     @id @default(autoincrement())
  url         String
  isPrimary   Boolean
  isThumbnail Boolean

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  mod   Mod? @relation(fields: [modId], references: [id])
  modId Int?
}

model ModVersion {
  id          Int    @id @default(autoincrement())
  version     String
  changelog   String
  downloadUrl String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  mod   Mod? @relation(fields: [modId], references: [id])
  modId Int?
}

model Tag {
  id          Int    @id @default(autoincrement())
  name        String
  slug        String @unique
  description String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  mods Mod[]
}

model Category {
  id          Int    @id @default(autoincrement())
  name        String
  slug        String @unique
  description String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  mods Mod[]
}
